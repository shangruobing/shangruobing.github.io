import{D as c,_ as f}from"./index-yepc7o5B.js";const _=2,p=1,u=12,w=1;class D{constructor(t){this.loadImageShape=async e=>{if(!this._engine.loadImage)throw new Error(`${c} image shape not initialized`);await this._engine.loadImage({gif:e.gif,name:e.name,replaceColor:e.replaceColor??!1,src:e.src})},this._engine=t}addImage(t){this._engine.images||(this._engine.images=[]),this._engine.images.push(t)}async draw(t){const{context:e,radius:s,particle:i,opacity:n}=t,a=i.image,r=a==null?void 0:a.element;if(a){if(e.globalAlpha=n,a.gif&&a.gifData){const{drawGif:o}=await f(()=>import("./Utils-7OlmkE21.js"),__vite__mapDeps([0,1,2]));o(t)}else if(r){const o=a.ratio,g={x:-s,y:-s},l=s*_;e.drawImage(r,g.x,g.y,l,l/o)}e.globalAlpha=p}}getSidesCount(){return u}async init(t){const e=t.actualOptions;if(!(!e.preload||!this._engine.loadImage))for(const s of e.preload)await this._engine.loadImage(s)}async loadShape(t){if(t.shape!=="image"&&t.shape!=="images")return;this._engine.images||(this._engine.images=[]);const e=t.shapeData;if(!e)return;this._engine.images.find(i=>i.name===e.name||i.source===e.src)||(await this.loadImageShape(e),await this.loadShape(t))}async particleInit(t,e){if(e.shape!=="image"&&e.shape!=="images")return;this._engine.images||(this._engine.images=[]);const s=this._engine.images,i=e.shapeData;if(!i)return;const n=e.getFillColor(),a=s.find(m=>m.name===i.name||m.source===i.src);if(!a)return;const r=i.replaceColor??a.replaceColor;if(a.loading){setTimeout(()=>{this.particleInit(t,e)});return}let o;if(a.svgData&&n){const{replaceImageColor:m}=await f(()=>import("./index-dYYDeXkQ.js").then(d=>d.U),__vite__mapDeps([3,1,2]));o=await m(a,i,n,e)}else o={color:n,data:a,element:a.element,gif:a.gif,gifData:a.gifData,gifLoopCount:a.gifLoopCount,loaded:!0,ratio:i.width&&i.height?i.width/i.height:a.ratio??w,replaceColor:r,source:i.src};o.ratio||(o.ratio=1);const g=i.fill??e.shapeFill,l=i.close??e.shapeClose,h={image:o,fill:g,close:l};e.image=h.image,e.shapeFill=h.fill,e.shapeClose=h.close}}export{D as ImageDrawer};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/Utils-7OlmkE21.js","assets/index-yepc7o5B.js","assets/index-eBqgu0pU.css","assets/index-dYYDeXkQ.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}