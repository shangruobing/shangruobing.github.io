import{_ as t,c as e,o as a,N as l}from"./chunks/framework.1e6a71f2.js";const p=JSON.parse('{"title":"phone.actions.makegif","description":"","frontmatter":{},"headers":[],"relativePath":"多媒体类/phone.actions.makegif.md","lastUpdated":1679071389000}'),d={name:"多媒体类/phone.actions.makegif.md"},i=l('<h1 id="phone-actions-makegif" tabindex="-1">phone.actions.makegif <a class="header-anchor" href="#phone-actions-makegif" aria-label="Permalink to &quot;phone.actions.makegif&quot;">​</a></h1><h2 id="id" tabindex="-1">Id <a class="header-anchor" href="#id" aria-label="Permalink to &quot;Id&quot;">​</a></h2><p>8</p><h2 id="domain" tabindex="-1">Domain <a class="header-anchor" href="#domain" aria-label="Permalink to &quot;Domain&quot;">​</a></h2><p>娱乐,动图</p><h2 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h2><p>输出结果描述:动画GIF;描述摘要:从传递到动作中的图像或视频创建动画GIF。</p><h2 id="inputparams" tabindex="-1">InputParams <a class="header-anchor" href="#inputparams" aria-label="Permalink to &quot;InputParams&quot;">​</a></h2><table><thead><tr><th style="text-align:right;"></th><th style="text-align:left;">paramName</th><th style="text-align:left;">paramType</th><th style="text-align:left;">defaultValue</th><th style="text-align:left;">required</th><th style="text-align:left;">description</th></tr></thead><tbody><tr><td style="text-align:right;">0</td><td style="text-align:left;">secondsPerPhoto</td><td style="text-align:left;">number</td><td style="text-align:left;">0.2</td><td style="text-align:left;">True</td><td style="text-align:left;">每张照片的秒数</td></tr><tr><td style="text-align:right;">1</td><td style="text-align:left;">loopForever</td><td style="text-align:left;">boolean</td><td style="text-align:left;">True</td><td style="text-align:left;">True</td><td style="text-align:left;">永远循环</td></tr><tr><td style="text-align:right;">2</td><td style="text-align:left;">numbertofLoops</td><td style="text-align:left;">number</td><td style="text-align:left;"></td><td style="text-align:left;">True</td><td style="text-align:left;">loopForever参数为false时，设定循环次数</td></tr><tr><td style="text-align:right;">3</td><td style="text-align:left;">autoSize</td><td style="text-align:left;">boolean</td><td style="text-align:left;">True</td><td style="text-align:left;">True</td><td style="text-align:left;">自动调整大小</td></tr><tr><td style="text-align:right;">4</td><td style="text-align:left;">width</td><td style="text-align:left;">number</td><td style="text-align:left;">500</td><td style="text-align:left;">True</td><td style="text-align:left;">宽度</td></tr><tr><td style="text-align:right;">5</td><td style="text-align:left;">height</td><td style="text-align:left;">number</td><td style="text-align:left;">500</td><td style="text-align:left;">True</td><td style="text-align:left;">高度</td></tr><tr><td style="text-align:right;">6</td><td style="text-align:left;">content</td><td style="text-align:left;"><code>List&lt;CPImage&gt;</code></td><td style="text-align:left;"></td><td style="text-align:left;">True</td><td style="text-align:left;">所容纳之物</td></tr></tbody></table><h2 id="outputparams" tabindex="-1">OutputParams <a class="header-anchor" href="#outputparams" aria-label="Permalink to &quot;OutputParams&quot;">​</a></h2>',10),n=[i];function r(s,o,h,g,f,x){return a(),e("div",null,n)}const c=t(d,[["render",r]]);export{p as __pageData,c as default};
